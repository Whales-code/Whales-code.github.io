<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>XJTUPC 2024 崩坏星穹铁道题解</title>
    <url>/2025/03/24/XJTUPC-2024-%E5%B4%A9%E5%9D%8F%E6%98%9F%E7%A9%B9%E9%93%81%E9%81%93%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="这是题目链接-https-www-luogu-com-cn-problem-P10528"><a href="#这是题目链接-https-www-luogu-com-cn-problem-P10528" class="headerlink" title="[这是题目链接]: https://www.luogu.com.cn/problem/P10528"></a>[这是题目链接]: <a href="https://www.luogu.com.cn/problem/P10528">https://www.luogu.com.cn/problem/P10528</a></h3><h1 id="P10528-XJTUPC-2024-崩坏：星穹铁道"><a href="#P10528-XJTUPC-2024-崩坏：星穹铁道" class="headerlink" title="P10528 [XJTUPC 2024] 崩坏：星穹铁道"></a>P10528 [XJTUPC 2024] 崩坏：星穹铁道</h1><h2 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h2><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/7urblttd.png" alt=""></p>
<p>Corycle 喜欢玩一个由米哈游自主研发的一款回合制战斗游戏———《崩坏：星穹铁道》。这片银河中有名为「星神」的存在，他们造就现实，抹消星辰，在无数「世界」中留下他们的痕迹。你将由此探索新的文明，结识新的伙伴，在无数光怪陆离的「世界」与「世界」之间展开新的冒险。所有你想知道的，都将在群星中找到答案。</p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在游戏《崩坏：星穹铁道》中，你的队伍里会有四名角色轮流行动，所有角色共享用于施放战技的战技点。当战斗开始时，你会获得 $k$ 个战技点，且战技点的上限为 $5$ 个。每个角色行动时可选择进行普通攻击或者施放战技，进行普通攻击时会为全队增加一个战技点，当战技点达到上限时也可以进行普通攻击，但是此时不回复战技点。角色施放战技需要消耗一个战技点，当没有战技点时只能进行普通攻击而不可释放技能。</p>
<p>Corycle 想成为星穹铁道高手，为此他需要对自己的配队了如指掌。由于角色有多种职业，同时为了方便对角色类型进行定位，他把角色的行动模式分为了三种类型：</p>
<ol>
<li><p>当角色行动时，只会进行普通攻击。</p>
</li>
<li><p>当角色行动时，若有战技点不少于 $1$ 则必定释放技能，否则进行普通攻击。</p>
</li>
<li><p>不对角色的行动进行限制。</p>
</li>
</ol>
<p>现在 Corycle 开始了一场战斗，他想知道当队伍中的四名角色一共行动 $n$ 次时，可能会有多少种不同的行动方案。我们称两个行动方案不同，当且仅当存在至少一个回合中，两个方案里角色行为不同。这个答案可能是一个很大的数，所以请将答案对 $998244353$ 取模。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入第一行有两个正整数 $n$ 和 $k$ ($1\le n\le 1\times 10^{18},0\le k\le 5$)，表示总行动次数与初始战技点数，用空格隔开。</p>
<p>第二行有四个用空格隔开的正整数 $a_1,a_2,a_3,a_4$ ($1 \le a_1,a_2,a_3,a_4 \le 3$)，表示四名角色的行动模式类型。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出仅一个整数，表示不同的行动方案数。</p>
<h2 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例 #1"></a>输入输出样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 1</span><br><span class="line">2 3 2 1</span><br></pre></td></tr></table></figure>
<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>
<h2 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例 #2"></a>输入输出样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 #2"></a>输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8 5</span><br><span class="line">2 1 1 3</span><br></pre></td></tr></table></figure>
<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 #2"></a>输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h4 id="题意就是有4个角色，有4个行动模式，"><a href="#题意就是有4个角色，有4个行动模式，" class="headerlink" title="题意就是有4个角色，有4个行动模式，"></a>题意就是有4个角色，有4个行动模式，</h4><ul>
<li><strong>第一种只能普攻</strong></li>
<li><strong>第二种在战技点不少于 $1$ 时则必定释放技能，否则进行普攻</strong></li>
<li><strong>第三种是都可以</strong></li>
</ul>
<p><strong>4名角色必须按顺序行动</strong></p>
<h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入第一行有两个正整数 $n$ 和 $k$ ($1\le n\le 1\times 10^{18},0\le k\le 5$)，表示总行动次数与初始战技点数，用空格隔开。</p>
<p>第二行有四个用空格隔开的正整数 $a_1,a_2,a_3,a_4$ ($1 \le a_1,a_2,a_3,a_4 \le 3$)，表示四名角色的行动模式类型。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出仅一个整数，表示不同的行动方案数。(对 $998244353$ 取模)</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>我们可以分别对这三种类型的角色分情况讨论<br>设$f[i][k]$表示第$i$个回合中还剩$k$个战技点数$(i&gt;1)$</p>
<h3 id="1-第一种类型"><a href="#1-第一种类型" class="headerlink" title="1. 第一种类型"></a>1. 第一种类型</h3><ul>
<li>$f[i][1]=f[i-1][0]$</li>
<li>$f[i][2]=f[i-1][1]$</li>
<li>$f[i][3]=f[i-1][2]$</li>
<li>$f[i][4]=f[i-1][3]$</li>
<li>$f[i][5]=f[i-1][4]+f[i-1][5]$</li>
</ul>
<h3 id="2-第二种类型"><a href="#2-第二种类型" class="headerlink" title="2. 第二种类型"></a>2. 第二种类型</h3><ul>
<li>$f[i][0]=f[i-1][1]$</li>
<li>$f[i][1]=f[i-1][2]+f[i-1][0]$</li>
<li>$f[i][2]=f[i-1][3]$</li>
<li>$f[i][3]=f[i-1][4]$</li>
<li>$f[i][4]=f[i-1][5]$</li>
</ul>
<h3 id="3-第三种类型"><a href="#3-第三种类型" class="headerlink" title="3. 第三种类型"></a>3. 第三种类型</h3><ul>
<li>$f[i][0]=f[i-1][1]$</li>
<li>$f[i][1]=f[i-1][0]+f[i-1][2]$</li>
<li>$f[i][2]=f[i-1][1]+f[i-1][3]$</li>
<li>$f[i][3]=f[i-1][2]+f[i-1][4]$</li>
<li>$f[i][4]=f[i-1][3]+f[i-1][5]$</li>
<li>$f[i][5]=f[i-1][4]+f[i-1][5]$</li>
</ul>
<p>但是，我们再看题目数据范围，($1\le n\le 1\times 10^{18}$)<br>很显然我们用递推的方式肯定TLE<br>因此，我们就想到要用$O(logn)$复杂度的算法：<strong>矩阵快速幂！</strong></p>
<h4 id="我们可以把每种类型的矩阵构造出来，来进行状态的转移"><a href="#我们可以把每种类型的矩阵构造出来，来进行状态的转移" class="headerlink" title="我们可以把每种类型的矩阵构造出来，来进行状态的转移"></a>我们可以把每种类型的矩阵构造出来，来进行状态的转移</h4><h3 id="1-第一种类型-1"><a href="#1-第一种类型-1" class="headerlink" title="1.第一种类型"></a>1.第一种类型</h3><script type="math/tex; mode=display">\begin{bmatrix}  0&1  &0  &0  &0  &0 \\  0&0  &1  &0  &0  &0 \\  0&0  &0  &1  &0  &0 \\  0&0  &0  &0  &1  &0 \\  0&0  &0  &0  &0  &1 \\  0&0  &0  &0  &0  &1\end{bmatrix}</script><h3 id="2-第二种类型-1"><a href="#2-第二种类型-1" class="headerlink" title="2.第二种类型"></a>2.第二种类型</h3><script type="math/tex; mode=display">\begin{bmatrix}  0&1  &0  &0  &0  &0 \\  1&0  &0  &0  &0  &0 \\  0&1  &0  &0  &0  &0 \\  0&0  &1  &0  &0  &0 \\  0&0  &0  &1  &0  &0 \\  0&0  &0  &0  &1  &0\end{bmatrix}</script><h3 id="3-第三种类型-1"><a href="#3-第三种类型-1" class="headerlink" title="3.第三种类型"></a>3.第三种类型</h3><script type="math/tex; mode=display">\begin{bmatrix}  0&1  &0  &0  &0  &0 \\  1&0  &1  &0  &0  &0 \\  0&1  &0  &1  &0  &0 \\  0&0  &1  &0  &1  &0 \\  0&0  &0  &1  &0  &1 \\  0&0  &0  &0  &1  &1\end{bmatrix}</script><p>由于$4$个角色按顺序行动，我们可以把$4$个分成一组，用一组的矩阵进行快速幂运算，也就是分成$n/4$组,至于剩下的$n$ mod $4$ 个剩余的最后单独乘即可，初始状态就是初始战技点那一项为$1$,其余全为$0$。<br>最后答案就是剩余战技点分别$0,1,2,3,4,5$的和（别忘记取模）。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod =<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> op[<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> x[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> A[<span class="number">6</span>][<span class="number">6</span>]=</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> B[<span class="number">6</span>][<span class="number">6</span>]=</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> C[<span class="number">6</span>][<span class="number">6</span>]=</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,</span><br><span class="line">    <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> ans[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> st[<span class="number">1</span>][<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> res[<span class="number">1</span>][<span class="number">6</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mu</span><span class="params">(<span class="type">int</span> a[][<span class="number">6</span>],<span class="type">int</span> b[][<span class="number">6</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t[<span class="number">6</span>][<span class="number">6</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">6</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                t[i][j]=(t[i][j]+a[i][k]*b[k][j])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][j]=t[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">mu</span>(ans,x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">mu</span>(x,x);</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    cin&gt;&gt;op[<span class="number">0</span>]&gt;&gt;op[<span class="number">1</span>]&gt;&gt;op[<span class="number">2</span>]&gt;&gt;op[<span class="number">3</span>];</span><br><span class="line">    st[<span class="number">0</span>][m]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++) ans[i][i]=x[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(op[i]==<span class="number">1</span>) <span class="built_in">mu</span>(x,A);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op[i]==<span class="number">2</span>) <span class="built_in">mu</span>(x,B);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">mu</span>(x,C);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">qpow</span>(n/<span class="number">4</span>);</span><br><span class="line">    <span class="type">int</span> yu=n%<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;yu;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(op[i]==<span class="number">1</span>) <span class="built_in">mu</span>(ans,A);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op[i]==<span class="number">2</span>) <span class="built_in">mu</span>(ans,B);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">mu</span>(ans,C);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">6</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                res[i][j]=(res[i][j]+st[i][k]*ans[k][j])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> as=(res[<span class="number">0</span>][<span class="number">0</span>]+res[<span class="number">0</span>][<span class="number">1</span>]+res[<span class="number">0</span>][<span class="number">2</span>]+res[<span class="number">0</span>][<span class="number">3</span>]+res[<span class="number">0</span>][<span class="number">4</span>]+res[<span class="number">0</span>][<span class="number">5</span>])%mod;</span><br><span class="line">    cout&lt;&lt;as;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>矩阵快速幂</tag>
      </tags>
  </entry>
  <entry>
    <title>不定积分公式</title>
    <url>/2025/03/16/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="1-int-kdx-kx-C-k是常数"><a href="#1-int-kdx-kx-C-k是常数" class="headerlink" title="1. $\int kdx=kx+C　(k是常数)$"></a>1. $\int kdx=kx+C　(k是常数)$</h2><h2 id="2-int-x-mu-dx-frac-x-mu-1-mu-1-C-mu-ne-1"><a href="#2-int-x-mu-dx-frac-x-mu-1-mu-1-C-mu-ne-1" class="headerlink" title="2. $\int x^{\mu } dx=\frac{x^{\mu+1} }{\mu+1} +C　(\mu\ne -1)$"></a>2. $\int x^{\mu } dx=\frac{x^{\mu+1} }{\mu+1} +C　(\mu\ne -1)$</h2><h2 id="3-int-frac-dx-x-ln-left-x-right-C"><a href="#3-int-frac-dx-x-ln-left-x-right-C" class="headerlink" title="3. $\int \frac{dx}{x} =\ln_{}{\left |x  \right | } +C$"></a>3. $\int \frac{dx}{x} =\ln_{}{\left |x  \right | } +C$</h2><h2 id="4-int-frac-1-1-x-2-dx-arctan-x-C"><a href="#4-int-frac-1-1-x-2-dx-arctan-x-C" class="headerlink" title="4. $\int \frac{1}{1+x^{2} } dx=\arctan x+C$"></a>4. $\int \frac{1}{1+x^{2} } dx=\arctan x+C$</h2><h2 id="5-int-frac-1-sqrt-1-x-2-dx-arcsin-x-C"><a href="#5-int-frac-1-sqrt-1-x-2-dx-arcsin-x-C" class="headerlink" title="5. $\int \frac{1}{\sqrt{1-x^{2} } } dx=\arcsin x+C$"></a>5. $\int \frac{1}{\sqrt{1-x^{2} } } dx=\arcsin x+C$</h2><h2 id="6-int-cos-xdx-sin-x-C"><a href="#6-int-cos-xdx-sin-x-C" class="headerlink" title="6. $\int \cos xdx=\sin x+C$"></a>6. $\int \cos xdx=\sin x+C$</h2><h2 id="7-int-sin-xdx-cos-x-C"><a href="#7-int-sin-xdx-cos-x-C" class="headerlink" title="7. $\int \sin xdx=-\cos x+C$"></a>7. $\int \sin xdx=-\cos x+C$</h2><h2 id="8-int-frac-dx-cos-x-2-int-sec-2-xdx-tan-x-C"><a href="#8-int-frac-dx-cos-x-2-int-sec-2-xdx-tan-x-C" class="headerlink" title="8. $\int \frac{dx}{\cos x^{2} } =\int \sec^{2} xdx=\tan x+C$"></a>8. $\int \frac{dx}{\cos x^{2} } =\int \sec^{2} xdx=\tan x+C$</h2><h2 id="9-int-frac-dx-sin-x-2-int-csc-2-xdx-cot-x-C"><a href="#9-int-frac-dx-sin-x-2-int-csc-2-xdx-cot-x-C" class="headerlink" title="9. $\int \frac{dx}{\sin x^{2} } =\int \csc^{2} xdx=- \cot x+C$"></a>9. $\int \frac{dx}{\sin x^{2} } =\int \csc^{2} xdx=- \cot x+C$</h2><h2 id="10-int-sec-x-tan-xdx-sec-x-C"><a href="#10-int-sec-x-tan-xdx-sec-x-C" class="headerlink" title="10. $\int \sec x\tan xdx=\sec x+C$"></a>10. $\int \sec x\tan xdx=\sec x+C$</h2><h2 id="11-int-csc-x-cot-xdx-csc-x-C"><a href="#11-int-csc-x-cot-xdx-csc-x-C" class="headerlink" title="11. $\int \csc x\cot xdx=- \csc x+C$"></a>11. $\int \csc x\cot xdx=- \csc x+C$</h2><h2 id="12-int-e-x-dx-e-x-C"><a href="#12-int-e-x-dx-e-x-C" class="headerlink" title="12. $\int e^{x} dx=e^{x}+C$"></a>12. $\int e^{x} dx=e^{x}+C$</h2><h2 id="13-int-a-x-dx-frac-a-x-ln-a-C"><a href="#13-int-a-x-dx-frac-a-x-ln-a-C" class="headerlink" title="13. $\int a^{x} dx=\frac{a^{x}}{\ln_{}{a} } +C$"></a>13. $\int a^{x} dx=\frac{a^{x}}{\ln_{}{a} } +C$</h2><h2 id="14-int-tan-xdx-ln-left-cos-x-right-C"><a href="#14-int-tan-xdx-ln-left-cos-x-right-C" class="headerlink" title="14. $\int \tan xdx=-\ln_{}{\left |\cos x  \right | } +C$"></a>14. $\int \tan xdx=-\ln_{}{\left |\cos x  \right | } +C$</h2><h2 id="15-int-cot-xdx-ln-left-sin-x-right-C"><a href="#15-int-cot-xdx-ln-left-sin-x-right-C" class="headerlink" title="15. $\int \cot xdx=\ln_{}{\left |\sin x  \right | } +C$"></a>15. $\int \cot xdx=\ln_{}{\left |\sin x  \right | } +C$</h2><h2 id="16-int-sec-xdx-ln-left-sec-x-tan-x-right-C"><a href="#16-int-sec-xdx-ln-left-sec-x-tan-x-right-C" class="headerlink" title="16. $\int \sec xdx=\ln_{}{\left |\sec x+\tan x  \right | } +C$"></a>16. $\int \sec xdx=\ln_{}{\left |\sec x+\tan x  \right | } +C$</h2><h2 id="17-int-csc-xdx-ln-left-csc-x-cot-x-right-C"><a href="#17-int-csc-xdx-ln-left-csc-x-cot-x-right-C" class="headerlink" title="17. $\int \csc xdx=\ln_{}{\left |\csc x-\cot x  \right | } +C$"></a>17. $\int \csc xdx=\ln_{}{\left |\csc x-\cot x  \right | } +C$</h2><h2 id="18-int-frac-1-a-2-x-2-dx-frac-1-a-arctan-frac-x-a-C"><a href="#18-int-frac-1-a-2-x-2-dx-frac-1-a-arctan-frac-x-a-C" class="headerlink" title="18. $\int \frac{1}{a^{2}+x^{2} } dx=\frac{1}{a} \arctan \frac{x}{a} +C$"></a>18. $\int \frac{1}{a^{2}+x^{2} } dx=\frac{1}{a} \arctan \frac{x}{a} +C$</h2><h2 id="19-int-frac-1-x-2-a-2-dx-frac-1-2a-ln-left-frac-x-a-x-a-right-C"><a href="#19-int-frac-1-x-2-a-2-dx-frac-1-2a-ln-left-frac-x-a-x-a-right-C" class="headerlink" title="19. $\int \frac{1}{x^{2}-a^{2} } dx=\frac{1}{2a} \ln_{}{\left |\frac{x-a}{x+a}  \right | } +C $"></a>19. $\int \frac{1}{x^{2}-a^{2} } dx=\frac{1}{2a} \ln_{}{\left |\frac{x-a}{x+a}  \right | } +C $</h2><h2 id="20-int-frac-1-a-2-x-2-dx-frac-1-2a-ln-left-frac-a-x-a-x-right-C"><a href="#20-int-frac-1-a-2-x-2-dx-frac-1-2a-ln-left-frac-a-x-a-x-right-C" class="headerlink" title="20. $\int \frac{1}{a^{2}-x^{2} } dx=\frac{1}{2a}\ln_{}{\left | \frac{a+x}{a-x}  \right | }  +C$"></a>20. $\int \frac{1}{a^{2}-x^{2} } dx=\frac{1}{2a}\ln_{}{\left | \frac{a+x}{a-x}  \right | }  +C$</h2><h2 id="21-int-frac-1-sqrt-a-2-x-2-dx-arcsin-frac-x-a-C"><a href="#21-int-frac-1-sqrt-a-2-x-2-dx-arcsin-frac-x-a-C" class="headerlink" title="21. $\int \frac{1}{\sqrt{a^{2}-x^{2} } } dx=\arcsin \frac{x}{a} +C$"></a>21. $\int \frac{1}{\sqrt{a^{2}-x^{2} } } dx=\arcsin \frac{x}{a} +C$</h2><h2 id="22-int-frac-1-sqrt-x-2-pm-a-2-dx-ln-left-x-sqrt-x-2-pm-a-2-right-C"><a href="#22-int-frac-1-sqrt-x-2-pm-a-2-dx-ln-left-x-sqrt-x-2-pm-a-2-right-C" class="headerlink" title="22. $\int \frac{1}{\sqrt{x^{2}\pm a^{2}  } } dx=\ln_{}{\left | x+\sqrt{x^{2}\pm a^{2}  } \right | } +C$"></a>22. $\int \frac{1}{\sqrt{x^{2}\pm a^{2}  } } dx=\ln_{}{\left | x+\sqrt{x^{2}\pm a^{2}  } \right | } +C$</h2><p><img src="https://img.dexbug.com/i/2025/03/16/xxejlw.png" alt="5c2c39418213545c2daab4936c91ba6f"></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>词向量</title>
    <url>/2025/03/31/%E8%AF%8D%E5%90%91%E9%87%8F/</url>
    <content><![CDATA[<h2 id="词向量的功能"><a href="#词向量的功能" class="headerlink" title="词向量的功能"></a>词向量的功能</h2><p>要将自然语言交给机器学习中的算法来处理，通常需要首先将语言数学化，词向量就是用来将语言中的词进行数学化的一种方式。<br><strong>通过将文字转化成向量的形式才有助于计算机对文字的处理。</strong></p>
<h2 id="传统方法的局限"><a href="#传统方法的局限" class="headerlink" title="传统方法的局限"></a>传统方法的局限</h2><h4 id="WordNet"><a href="#WordNet" class="headerlink" title="WordNet"></a>WordNet</h4><p>WordNet 是一个基于词汇语义关系的词典，它按照意义（而不是字母顺序）组织单词，并建立了同义词、反义词、上位词、下位词等关系。</p>
<hr>
<h5 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h5><ul>
<li>不能表示细微的语义差异</li>
<li>不能处理多义词的上下文（一词多义）</li>
<li>词汇覆盖不全，难以扩展</li>
<li>不能表示词的向量关系（无法体现出词与词之间的相似度）<h4 id="One-hot-向量"><a href="#One-hot-向量" class="headerlink" title="One-hot 向量"></a>One-hot 向量</h4>这个向量的特点是：<strong>只有一个位置是1，其他全是0</strong>，这就是 One-hot 向量。通过不同位置的$1$来区分词。</li>
</ul>
<hr>
<h5 id="局限性-1"><a href="#局限性-1" class="headerlink" title="局限性"></a>局限性</h5><ul>
<li>维度太高，高维稀疏，浪费空间（如果词数量过高，会导致超大的内存占用）</li>
<li>无法表示词的相似性（One-hot 向量不能表达词的语义信息。）</li>
<li>无法表示词的组合关系</li>
</ul>
<hr>
<p><strong>由于传统方法有各种局限，科学家又想出了新的方法</strong></p>
<hr>
<h3 id="分布式语义学"><a href="#分布式语义学" class="headerlink" title="分布式语义学"></a>分布式语义学</h3><p>分布式语义学是一种用数学方法来表示单词含义的理论，核心思想是：<strong>一个单词的含义，由它所处的上下文决定。</strong><br>我们可以通过统计一个单词周围的单词，来推测它的意思！（类比完形填空）</p>
<h3 id="Word2Vec-模型"><a href="#Word2Vec-模型" class="headerlink" title="Word2Vec 模型"></a>Word2Vec 模型</h3><p><strong>核心思想：通过预测词的上下文（周围词）学习词的向量表示。</strong></p>
<h4 id="优化方法："><a href="#优化方法：" class="headerlink" title="优化方法："></a>优化方法：</h4><h5 id="负采样"><a href="#负采样" class="headerlink" title="负采样"></a>负采样</h5><p>负采样通过简化目标函数，将多分类问题转化为二元分类问题：</p>
<p>正样本：中心词与真实上下文词的配对（如“苹果”和“吃”）。</p>
<p>负样本：中心词与随机采样的无关词的配对（如“苹果”和“火箭”）。</p>
<p>模型需要：</p>
<ul>
<li>最大化正样本的概率（即二者相关）。</li>
<li>最小化负样本的概率（即二者无关）。</li>
</ul>
<p>负样本的选择不是完全随机的，而是根据词频调整。例如，高频词（如 “的”“在”）被采样的概率会降低，低频词（如 “量子”“宇宙”）被采样的概率会提高。</p>
<p>这样可以避免模型过度关注常见词，更有效地学习低频词的语义。<br>公式：</p>
<h2 id="P-w-frac-text-词频-w-3-4-sum-text-词频-w-3-4"><a href="#P-w-frac-text-词频-w-3-4-sum-text-词频-w-3-4" class="headerlink" title="$P(w) = \frac{\text{词频}(w)^{3/4}}{\sum \text{词频}(w)^{3/4}}$"></a>$P(w) = \frac{\text{词频}(w)^{3/4}}{\sum \text{词频}(w)^{3/4}}$</h2><h6 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h6><p>简化计算：原本需要计算百万次的概率，现在只需要计算几次（比如 5-20 次），大大减少了计算量。</p>
<h5 id="随机梯度下降"><a href="#随机梯度下降" class="headerlink" title="随机梯度下降"></a>随机梯度下降</h5><p>在训练机器学习和深度学习模型时，我们需要找到最优参数，让模型在预测时误差最小。梯度下降就是常用的优化方法。</p>
<p>普通梯度下降需要计算所有数据的平均梯度，计算量太大，速度太慢！<br>随机梯度下降的核心思想：每次只用一个样本来更新参数！（逐样本更新参数，加速训练）<br><strong>最大优势是计算量小，更新速度快</strong></p>
<h5 id="模型变体：Skip-gram（中心词→上下文）和-CBOW（上下文→中心词）"><a href="#模型变体：Skip-gram（中心词→上下文）和-CBOW（上下文→中心词）" class="headerlink" title="模型变体：Skip-gram（中心词→上下文）和 CBOW（上下文→中心词）"></a>模型变体：Skip-gram（中心词→上下文）和 CBOW（上下文→中心词）</h5><p>Skip-gram —— 用中心词猜测周围的词<br>CBOW —— 用上下文猜测中心词</p>
<h3 id="词向量的改进"><a href="#词向量的改进" class="headerlink" title="词向量的改进"></a>词向量的改进</h3><h4 id="传统共现矩阵：直接统计词共现次数，但维度高、稀疏性强。"><a href="#传统共现矩阵：直接统计词共现次数，但维度高、稀疏性强。" class="headerlink" title="传统共现矩阵：直接统计词共现次数，但维度高、稀疏性强。"></a>传统共现矩阵：直接统计词共现次数，但维度高、稀疏性强。</h4><h4 id="优化方法：GloVe-模型"><a href="#优化方法：GloVe-模型" class="headerlink" title="优化方法：GloVe 模型"></a>优化方法：GloVe 模型</h4><p>通过对数双线性模型捕捉词间关系（如 <strong>“国王 - 男人 + 女人 = 王后”</strong>），优化词向量质量。<br>GloVe 主要是基于共现信息来训练词向量，具体来说，它在数学上做了两件事情：</p>
<ul>
<li>统计单词的共现概率</li>
<li>用数学公式优化词向量</li>
</ul>
<p>通过这种方法，我们不仅能衡量单词的相似度，还能理解单词之间的关系。</p>
<h3 id="如何评估词向量的好坏？"><a href="#如何评估词向量的好坏？" class="headerlink" title="如何评估词向量的好坏？"></a>如何评估词向量的好坏？</h3><ul>
<li>内在评估 —— 在词向量本身上进行测试<br>如果计算机的判断和人类相似，说明词向量的质量比较高！</li>
<li>外在评估 —— 在真实任务中验证效果<br>如果一个词向量能在多个 NLP 任务上表现良好，那它就是真的“好用”！</li>
</ul>
<h3 id="词义歧义问题"><a href="#词义歧义问题" class="headerlink" title="词义歧义问题"></a>词义歧义问题</h3><h5 id="通过聚类或线性组合不同语境下的词向量，分离不同词义。"><a href="#通过聚类或线性组合不同语境下的词向量，分离不同词义。" class="headerlink" title="通过聚类或线性组合不同语境下的词向量，分离不同词义。"></a>通过聚类或线性组合不同语境下的词向量，分离不同词义。</h5><p>在自然语言中，一个单词可能有多个意思，比如：在饮食类书籍里，“苹果”更多指水果，但在科技类书籍里，它通常指苹果公司。</p>
<ul>
<li>方法1：可以把这些不同的语境分成两组（聚类），分别给它们创建不同的词向量</li>
<li>方法2：用「线性组合」调整词向量<br>我们可以用加权平均的方法，把不同的语境向量线性组合，得到一个更准确的词向量。</li>
</ul>
<p>例如：<br>水果的“苹果” → 0.7 <em> 语境1向量 + 0.3 </em> 语境2向量<br>公司的“苹果” → 0.2 <em> 语境1向量 + 0.8 </em> 语境2向量</p>
<p><strong>这样，即使一个单词出现在不同的场景里，我们也可以通过动态调整它的向量，让计算机理解它当前的意思。</strong></p>
<h3 id="神经网络分类器"><a href="#神经网络分类器" class="headerlink" title="神经网络分类器"></a>神经网络分类器</h3><h4 id="逻辑回归：线性分类器，通过概率预测标签。"><a href="#逻辑回归：线性分类器，通过概率预测标签。" class="headerlink" title="逻辑回归：线性分类器，通过概率预测标签。"></a>逻辑回归：线性分类器，通过概率预测标签。</h4><p>逻辑回归就是一个最简单的分类器，它用一个线性方程计算分数（即“概率”），然后用Sigmoid函数把结果压缩到 0-1 之间，表示某个类别的可能性。</p>
<h4 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h4><h5 id="多层结构"><a href="#多层结构" class="headerlink" title="多层结构"></a>多层结构</h5><p>通过非线性激活函数学习复杂特征，让神经网络学到非线性关系。</p>
<h5 id="交叉熵损失"><a href="#交叉熵损失" class="headerlink" title="交叉熵损失"></a>交叉熵损失</h5><p>衡量预测概率与真实标签的差异，用于训练模型。<br>优化目标：调整神经网络的参数，使交叉熵损失最小！</p>
<h3 id="神经计算基础"><a href="#神经计算基础" class="headerlink" title="神经计算基础"></a>神经计算基础</h3><h5 id="神经元模型"><a href="#神经元模型" class="headerlink" title="神经元模型"></a>神经元模型</h5><p>模拟生物神经元，通过加权输入和激活函数输出结果。<br>计算输入的加权和，并通过激活函数输出。（权衡多个因素后做出判断）</p>
<h5 id="多层网络"><a href="#多层网络" class="headerlink" title="多层网络"></a>多层网络</h5><p>通过叠加非线性层实现更强大的特征提取和分类能力。<br>通过层层提取特征，实现复杂分类。</p>
]]></content>
      <categories>
        <category>大模型</category>
      </categories>
      <tags>
        <tag>-大模型 -自然语言处理</tag>
      </tags>
  </entry>
</search>
