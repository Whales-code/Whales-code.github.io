<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>test</title>
    <url>/2025/03/12/test/</url>
    <content><![CDATA[<h2 id="这是一个测试文件"><a href="#这是一个测试文件" class="headerlink" title="这是一个测试文件"></a>这是一个测试文件</h2><h3 id="线段树（区间最值操作、区间历史最值）"><a href="#线段树（区间最值操作、区间历史最值）" class="headerlink" title="线段树（区间最值操作、区间历史最值）"></a>线段树（区间最值操作、区间历史最值）</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M =<span class="number">5e5</span><span class="number">+1</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> lowest =<span class="number">-1e18</span>;</span><br><span class="line"><span class="type">int</span> a[M];</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> mx,sem,cntm,sum,mxadd,otheradd,mxhistory,mxaddtop,otheraddtop;</span><br><span class="line">&#125;;</span><br><span class="line">node tree[M&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lazy</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> sum,<span class="type">int</span> mxaddv,<span class="type">int</span> otheraddv,<span class="type">int</span> mxupv,<span class="type">int</span> otherupv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[i].mxhistory=<span class="built_in">max</span>(tree[i].mxhistory,tree[i].mx+mxupv);</span><br><span class="line">    tree[i].mxaddtop=<span class="built_in">max</span>(tree[i].mxaddtop,tree[i].mxadd+mxupv);</span><br><span class="line">    tree[i].otheraddtop=<span class="built_in">max</span>(tree[i].otheraddtop,tree[i].otheradd+otherupv);</span><br><span class="line">    tree[i].sum+=mxaddv*tree[i].cntm+otheraddv*(sum-tree[i].cntm);</span><br><span class="line">    tree[i].mx+=mxaddv;</span><br><span class="line">    tree[i].sem+= tree[i].sem==lowest? <span class="number">0</span>:otheraddv;</span><br><span class="line">    tree[i].mxadd+=mxaddv;</span><br><span class="line">    tree[i].otheradd+=otheraddv;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l=i&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> r=i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>;</span><br><span class="line">    tree[i].sum=tree[l].sum+tree[r].sum;</span><br><span class="line">    tree[i].mxhistory=<span class="built_in">max</span>(tree[l].mxhistory,tree[r].mxhistory);</span><br><span class="line">    <span class="keyword">if</span>(tree[l].mx&gt;tree[r].mx)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[i].mx=tree[l].mx;</span><br><span class="line">        tree[i].cntm=tree[l].cntm;</span><br><span class="line">        tree[i].sem=<span class="built_in">max</span>(tree[l].sem,tree[r].mx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(tree[l].mx&lt;tree[r].mx)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[i].mx=tree[r].mx;</span><br><span class="line">        tree[i].cntm=tree[r].cntm;</span><br><span class="line">        tree[i].sem=<span class="built_in">max</span>(tree[r].sem,tree[l].mx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        tree[i].mx=tree[l].mx;</span><br><span class="line">        tree[i].cntm=tree[l].cntm+tree[r].cntm;</span><br><span class="line">        tree[i].sem=<span class="built_in">max</span>(tree[l].sem,tree[r].sem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">down</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> ln,<span class="type">int</span> rn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l=i&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> r=i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> temp=<span class="built_in">max</span>(tree[l].mx,tree[r].mx);</span><br><span class="line">    <span class="keyword">if</span>(tree[l].mx==temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lazy</span>(l,ln,tree[i].mxadd,tree[i].otheradd,tree[i].mxaddtop,tree[i].otheraddtop);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lazy</span>(l,ln,tree[i].otheradd,tree[i].otheradd,tree[i].otheraddtop,tree[i].otheraddtop);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[r].mx==temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lazy</span>(r,rn,tree[i].mxadd,tree[i].otheradd,tree[i].mxaddtop,tree[i].otheraddtop);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lazy</span>(r,rn,tree[i].otheradd,tree[i].otheradd,tree[i].otheraddtop,tree[i].otheraddtop);</span><br><span class="line">    &#125;</span><br><span class="line">    tree[i].mxadd=tree[i].otheradd=tree[i].mxaddtop=tree[i].otheraddtop=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> jobl,<span class="type">int</span> jobr,<span class="type">int</span> jobv,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=l&amp;&amp;jobr&gt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lazy</span>(i,r-l<span class="number">+1</span>,jobv,jobv,jobv,jobv);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=((l+r)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">down</span>(i,mid-l<span class="number">+1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=mid)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(jobl,jobr,jobv,l,mid,i&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(jobr&gt;mid)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(jobl,jobr,jobv,mid<span class="number">+1</span>,r,i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">up</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> jobl,<span class="type">int</span> jobr,<span class="type">int</span> jobv,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jobv&gt;=tree[i].mx) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=l&amp;&amp;jobr&gt;=r&amp;&amp;tree[i].sem&lt;jobv)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lazy</span>(i,r-l<span class="number">+1</span>,jobv-tree[i].mx,<span class="number">0</span>,jobv-tree[i].mx,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=((l+r)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">down</span>(i,mid-l<span class="number">+1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=mid)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">update</span>(jobl,jobr,jobv,l,mid,i&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(jobr&gt;mid)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">update</span>(jobl,jobr,jobv,mid<span class="number">+1</span>,r,i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">up</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">querysum</span><span class="params">(<span class="type">int</span> jobl,<span class="type">int</span> jobr,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=l&amp;&amp;jobr&gt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[i].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mid=((l+r)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">down</span>(i,mid-l<span class="number">+1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=mid)</span><br><span class="line">    &#123;</span><br><span class="line">        s+=<span class="built_in">querysum</span>(jobl,jobr,l,mid,i&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(jobr&gt;mid)</span><br><span class="line">    &#123;</span><br><span class="line">        s+=<span class="built_in">querysum</span>(jobl,jobr,mid<span class="number">+1</span>,r,i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">querymax</span><span class="params">(<span class="type">int</span> jobl,<span class="type">int</span> jobr,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=l&amp;&amp;jobr&gt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[i].mx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> s=lowest;</span><br><span class="line">    <span class="type">int</span> mid=((l+r)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">down</span>(i,mid-l<span class="number">+1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=mid)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="built_in">max</span>(s,<span class="built_in">querymax</span>(jobl,jobr,l,mid,i&lt;&lt;<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(jobr&gt;mid)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="built_in">max</span>(s,<span class="built_in">querymax</span>(jobl,jobr,mid<span class="number">+1</span>,r,i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">querymaxhistory</span><span class="params">(<span class="type">int</span> jobl,<span class="type">int</span> jobr,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=l&amp;&amp;jobr&gt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[i].mxhistory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> s=lowest;</span><br><span class="line">    <span class="type">int</span> mid=((l+r)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">down</span>(i,mid-l<span class="number">+1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(jobl&lt;=mid)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="built_in">max</span>(s,<span class="built_in">querymaxhistory</span>(jobl,jobr,l,mid,i&lt;&lt;<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(jobr&gt;mid)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="built_in">max</span>(s,<span class="built_in">querymaxhistory</span>(jobl,jobr,mid<span class="number">+1</span>,r,i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[i].sum=tree[i].mx=tree[i].mxhistory=a[l];</span><br><span class="line">        tree[i].cntm=<span class="number">1</span>;</span><br><span class="line">        tree[i].sem=lowest;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=((l+r)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">build</span>(l,mid,i&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">build</span>(mid<span class="number">+1</span>,r,i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">up</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t,le,ri,k;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;le&gt;&gt;ri&gt;&gt;k;</span><br><span class="line">            <span class="built_in">add</span>(le,ri,k,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;le&gt;&gt;ri&gt;&gt;k;</span><br><span class="line">            <span class="built_in">update</span>(le,ri,k,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;le&gt;&gt;ri;</span><br><span class="line">            cout&lt;&lt;<span class="built_in">querysum</span>(le,ri,<span class="number">1</span>,n,<span class="number">1</span>)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;le&gt;&gt;ri;</span><br><span class="line">            cout&lt;&lt;<span class="built_in">querymax</span>(le,ri,<span class="number">1</span>,n,<span class="number">1</span>)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;le&gt;&gt;ri;</span><br><span class="line">            cout&lt;&lt;<span class="built_in">querymaxhistory</span>(le,ri,<span class="number">1</span>,n,<span class="number">1</span>)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2>]]></content>
      <categories>
        <category>算法</category>
      </categories>
  </entry>
  <entry>
    <title>test0</title>
    <url>/2025/03/12/test1/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>彩蛋</title>
    <url>/2025/03/18/test3/</url>
    <content><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=2026565329&auto=1&height=66"></iframe>]]></content>
  </entry>
  <entry>
    <title>不定积分公式</title>
    <url>/2025/03/16/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="1-int-kdx-kx-C-k是常数"><a href="#1-int-kdx-kx-C-k是常数" class="headerlink" title="1. $\int kdx=kx+C　(k是常数)$"></a>1. $\int kdx=kx+C　(k是常数)$</h2><h2 id="2-int-x-mu-dx-frac-x-mu-1-mu-1-C-mu-ne-1"><a href="#2-int-x-mu-dx-frac-x-mu-1-mu-1-C-mu-ne-1" class="headerlink" title="2. $\int x^{\mu } dx=\frac{x^{\mu+1} }{\mu+1} +C　(\mu\ne -1)$"></a>2. $\int x^{\mu } dx=\frac{x^{\mu+1} }{\mu+1} +C　(\mu\ne -1)$</h2><h2 id="3-int-frac-dx-x-ln-left-x-right-C"><a href="#3-int-frac-dx-x-ln-left-x-right-C" class="headerlink" title="3. $\int \frac{dx}{x} =\ln_{}{\left |x  \right | } +C$"></a>3. $\int \frac{dx}{x} =\ln_{}{\left |x  \right | } +C$</h2><h2 id="4-int-frac-1-1-x-2-dx-arctan-x-C"><a href="#4-int-frac-1-1-x-2-dx-arctan-x-C" class="headerlink" title="4. $\int \frac{1}{1+x^{2} } dx=\arctan x+C$"></a>4. $\int \frac{1}{1+x^{2} } dx=\arctan x+C$</h2><h2 id="5-int-frac-1-sqrt-1-x-2-dx-arcsin-x-C"><a href="#5-int-frac-1-sqrt-1-x-2-dx-arcsin-x-C" class="headerlink" title="5. $\int \frac{1}{\sqrt{1-x^{2} } } dx=\arcsin x+C$"></a>5. $\int \frac{1}{\sqrt{1-x^{2} } } dx=\arcsin x+C$</h2><h2 id="6-int-cos-xdx-sin-x-C"><a href="#6-int-cos-xdx-sin-x-C" class="headerlink" title="6. $\int \cos xdx=\sin x+C$"></a>6. $\int \cos xdx=\sin x+C$</h2><h2 id="7-int-sin-xdx-cos-x-C"><a href="#7-int-sin-xdx-cos-x-C" class="headerlink" title="7. $\int \sin xdx=-\cos x+C$"></a>7. $\int \sin xdx=-\cos x+C$</h2><h2 id="8-int-frac-dx-cos-x-2-int-sec-2-xdx-tan-x-C"><a href="#8-int-frac-dx-cos-x-2-int-sec-2-xdx-tan-x-C" class="headerlink" title="8. $\int \frac{dx}{\cos x^{2} } =\int \sec^{2} xdx=\tan x+C$"></a>8. $\int \frac{dx}{\cos x^{2} } =\int \sec^{2} xdx=\tan x+C$</h2><h2 id="9-int-frac-dx-sin-x-2-int-csc-2-xdx-cot-x-C"><a href="#9-int-frac-dx-sin-x-2-int-csc-2-xdx-cot-x-C" class="headerlink" title="9. $\int \frac{dx}{\sin x^{2} } =\int \csc^{2} xdx=- \cot x+C$"></a>9. $\int \frac{dx}{\sin x^{2} } =\int \csc^{2} xdx=- \cot x+C$</h2><h2 id="10-int-sec-x-tan-xdx-sec-x-C"><a href="#10-int-sec-x-tan-xdx-sec-x-C" class="headerlink" title="10. $\int \sec x\tan xdx=\sec x+C$"></a>10. $\int \sec x\tan xdx=\sec x+C$</h2><h2 id="11-int-csc-x-cot-xdx-csc-x-C"><a href="#11-int-csc-x-cot-xdx-csc-x-C" class="headerlink" title="11. $\int \csc x\cot xdx=- \csc x+C$"></a>11. $\int \csc x\cot xdx=- \csc x+C$</h2><h2 id="12-int-e-x-dx-e-x-C"><a href="#12-int-e-x-dx-e-x-C" class="headerlink" title="12. $\int e^{x} dx=e^{x}+C$"></a>12. $\int e^{x} dx=e^{x}+C$</h2><h2 id="13-int-a-x-dx-frac-a-x-ln-a-C"><a href="#13-int-a-x-dx-frac-a-x-ln-a-C" class="headerlink" title="13. $\int a^{x} dx=\frac{a^{x}}{\ln_{}{a} } +C$"></a>13. $\int a^{x} dx=\frac{a^{x}}{\ln_{}{a} } +C$</h2><h2 id="14-int-tan-xdx-ln-left-cos-x-right-C"><a href="#14-int-tan-xdx-ln-left-cos-x-right-C" class="headerlink" title="14. $\int \tan xdx=-\ln_{}{\left |\cos x  \right | } +C$"></a>14. $\int \tan xdx=-\ln_{}{\left |\cos x  \right | } +C$</h2><h2 id="15-int-cot-xdx-ln-left-sin-x-right-C"><a href="#15-int-cot-xdx-ln-left-sin-x-right-C" class="headerlink" title="15. $\int \cot xdx=\ln_{}{\left |\sin x  \right | } +C$"></a>15. $\int \cot xdx=\ln_{}{\left |\sin x  \right | } +C$</h2><h2 id="16-int-sec-xdx-ln-left-sec-x-tan-x-right-C"><a href="#16-int-sec-xdx-ln-left-sec-x-tan-x-right-C" class="headerlink" title="16. $\int \sec xdx=\ln_{}{\left |\sec x+\tan x  \right | } +C$"></a>16. $\int \sec xdx=\ln_{}{\left |\sec x+\tan x  \right | } +C$</h2><h2 id="17-int-csc-xdx-ln-left-csc-x-cot-x-right-C"><a href="#17-int-csc-xdx-ln-left-csc-x-cot-x-right-C" class="headerlink" title="17. $\int \csc xdx=\ln_{}{\left |\csc x-\cot x  \right | } +C$"></a>17. $\int \csc xdx=\ln_{}{\left |\csc x-\cot x  \right | } +C$</h2><h2 id="18-int-frac-1-a-2-x-2-dx-frac-1-a-arctan-frac-x-a-C"><a href="#18-int-frac-1-a-2-x-2-dx-frac-1-a-arctan-frac-x-a-C" class="headerlink" title="18. $\int \frac{1}{a^{2}+x^{2} } dx=\frac{1}{a} \arctan \frac{x}{a} +C$"></a>18. $\int \frac{1}{a^{2}+x^{2} } dx=\frac{1}{a} \arctan \frac{x}{a} +C$</h2><h2 id="19-int-frac-1-x-2-a-2-dx-frac-1-2a-ln-left-frac-x-a-x-a-right-C"><a href="#19-int-frac-1-x-2-a-2-dx-frac-1-2a-ln-left-frac-x-a-x-a-right-C" class="headerlink" title="19. $\int \frac{1}{x^{2}-a^{2} } dx=\frac{1}{2a} \ln_{}{\left |\frac{x-a}{x+a}  \right | } +C $"></a>19. $\int \frac{1}{x^{2}-a^{2} } dx=\frac{1}{2a} \ln_{}{\left |\frac{x-a}{x+a}  \right | } +C $</h2><h2 id="20-int-frac-1-a-2-x-2-dx-frac-1-2a-ln-left-frac-a-x-a-x-right-C"><a href="#20-int-frac-1-a-2-x-2-dx-frac-1-2a-ln-left-frac-a-x-a-x-right-C" class="headerlink" title="20. $\int \frac{1}{a^{2}-x^{2} } dx=\frac{1}{2a}\ln_{}{\left | \frac{a+x}{a-x}  \right | }  +C$"></a>20. $\int \frac{1}{a^{2}-x^{2} } dx=\frac{1}{2a}\ln_{}{\left | \frac{a+x}{a-x}  \right | }  +C$</h2><h2 id="21-int-frac-1-sqrt-a-2-x-2-dx-arcsin-frac-x-a-C"><a href="#21-int-frac-1-sqrt-a-2-x-2-dx-arcsin-frac-x-a-C" class="headerlink" title="21. $\int \frac{1}{\sqrt{a^{2}-x^{2} } } dx=\arcsin \frac{x}{a} +C$"></a>21. $\int \frac{1}{\sqrt{a^{2}-x^{2} } } dx=\arcsin \frac{x}{a} +C$</h2><h2 id="22-int-frac-1-sqrt-x-2-pm-a-2-dx-ln-left-x-sqrt-x-2-pm-a-2-right-C"><a href="#22-int-frac-1-sqrt-x-2-pm-a-2-dx-ln-left-x-sqrt-x-2-pm-a-2-right-C" class="headerlink" title="22. $\int \frac{1}{\sqrt{x^{2}\pm a^{2}  } } dx=\ln_{}{\left | x+\sqrt{x^{2}\pm a^{2}  } \right | } +C$"></a>22. $\int \frac{1}{\sqrt{x^{2}\pm a^{2}  } } dx=\ln_{}{\left | x+\sqrt{x^{2}\pm a^{2}  } \right | } +C$</h2><p><img src="https://img.dexbug.com/i/2025/03/16/xxejlw.png" alt="5c2c39418213545c2daab4936c91ba6f"></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高等数学</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/03/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
